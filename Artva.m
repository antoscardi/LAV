classdef Artva
    properties
        position
        identifier 
        SNR (1,1) double {mustBePositive} = 0.2 % Signal to Noise Ratio
        noise
    end
    methods
        % Constructor
        function obj = Artva(p,i)
            if nargin == 2
                obj.position = p;
                obj.identifier = i;
            end
        end

        function [phi, signal] = getSignal(obj, dronePos)
            droneX = dronePos(1);
            droneY = dronePos(2);
            droneZ = dronePos(3);

            artvaX = obj.position(1);
            artvaY = obj.position(2);
            artvaZ = obj.position(3);

            phi = [droneX^2;            ...
                   2 * droneX * droneY; ...
                   2 * droneX * droneZ; ...
                   droneY^2;            ...
                   2 * droneY * droneZ; ...
                   droneZ^2;            ...
                   -2 * droneX;         ...
                   -2 * droneY;         ...
                   -2 * droneZ;         ...
                   1];

            x = [1;      ...
                 0;      ...
                 0;      ...
                 1;      ...
                 0;      ...
                 1;      ...
                 artvaX; ...
                 artvaY; ...
                 artvaZ; ...
                 obj.position*obj.position.'];

            signal = phi.' * x;

            % White noise, MAYBE MAKE IT DEPENDENT ON THE DISTANCE w.r.t THE GOAL
            amplitudeNoise = obj.SNR * signal;
            % a + (b-a)*rand() noise in an interval of [a,b] where a is the negative of the amplitude of the noise
            obj.noise = -amplitudeNoise + 2.*amplitudeNoise.*rand(size(signal));
            signal = signal + obj.noise;
        end
    end
end